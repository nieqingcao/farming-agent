from fastapi import FastAPI
from pydantic import BaseModel
from typing import Dict, List, Optional

app = FastAPI(title="Farming Agent")

class PredictReq(BaseModel):
    features: Dict[str, float]
    targets: Optional[List[str]] = ["survival_rate", "daily_gain"]

class AskReq(BaseModel):
    query: str

@app.post("/predict")
def predict(req: PredictReq):
    return {
        "pred": {"survival_rate": 0.93, "daily_gain": 118},
        "influence_table": [
            {"feature":"temperature","target":"survival_rate","weight":-0.02},
            {"feature":"humidity","target":"daily_gain","weight":-0.10}
        ],
        "alerts": [{
            "feature":"temperature","value":28.0,"optimal_range":[18,25],
            "estimated_impact":{"survival_rate":-0.08,"daily_gain":-4},
            "advice":"开启侧窗通风，目标温度 24°C"
        }]
    }

@app.post("/ask")
def ask(req: AskReq):
    return {"text": "湿度 50–60% 时周增重较优；超过 60% 预计下降约 10%。"}
